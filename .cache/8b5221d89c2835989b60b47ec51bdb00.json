{"dependencies":[{"name":"/Users/davidbastian/Sites/ar/package.json","includedInParent":true,"mtime":1519875653000},{"name":"/Users/davidbastian/Sites/ar/.babelrc","includedInParent":true,"mtime":1519853599000},{"name":"/Users/davidbastian/Sites/ar/node_modules/posthtml-expressions/package.json","includedInParent":true,"mtime":1519865198000}],"generated":{"js":"'use strict';\n\n/**\n * @description Given a \"loop\" parameter from an \"each\" tag, parses out the param names and expression to be looped.\n *\n * @method parseLoopStatement\n *\n * @param {String}  input Input\n *\n * @return {Object} {}    Keys && Expression\n */\n\nfunction parseLoopStatement(input) {\n  // try to find ` in ` keyword\n  const inKeywordIndex = input.search(/\\sin\\s/);\n\n  // if we reach the end of the string without getting \"in\", it's an error\n  if (inKeywordIndex === -1) {\n    throw new Error(\"Loop statement lacking 'in' keyword\");\n  }\n\n  // expression is always after `in` keyword\n  const expression = input.substr(inKeywordIndex + 4);\n\n  // keys is always before `in` keyword\n  const keys = input.substr(0, inKeywordIndex).split(',');\n\n  for (let i = 0; i < keys.length; i++) {\n    keys[i] = keys[i].trim();\n  }\n\n  return { keys: keys, expression: expression };\n}\n\n/**\n * @module loops\n *\n * @type {Function}\n */\nmodule.exports = parseLoopStatement;","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":12,"column":0}},{"name":"parseLoopStatement","generated":{"line":13,"column":9},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":12,"column":9}},{"generated":{"line":13,"column":27},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":12,"column":0}},{"name":"input","generated":{"line":13,"column":28},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":12,"column":29}},{"generated":{"line":13,"column":33},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":35},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":12,"column":36}},{"generated":{"line":14,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":13,"column":2}},{"generated":{"line":15,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":14,"column":2}},{"name":"inKeywordIndex","generated":{"line":15,"column":8},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":14,"column":8}},{"name":"input","generated":{"line":15,"column":25},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":14,"column":25}},{"name":"search","generated":{"line":15,"column":31},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":14,"column":31}},{"generated":{"line":15,"column":37},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":14,"column":25}},{"generated":{"line":15,"column":38},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":14,"column":38}},{"generated":{"line":15,"column":46},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":14,"column":25}},{"generated":{"line":15,"column":47},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":14,"column":2}},{"generated":{"line":17,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":16,"column":2}},{"generated":{"line":18,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":17,"column":2}},{"name":"inKeywordIndex","generated":{"line":18,"column":6},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":17,"column":6}},{"generated":{"line":18,"column":25},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":17,"column":25}},{"generated":{"line":18,"column":26},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":17,"column":26}},{"generated":{"line":18,"column":27},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":17,"column":2}},{"generated":{"line":18,"column":29},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":17,"column":29}},{"generated":{"line":19,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":18,"column":4}},{"generated":{"line":19,"column":10},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":18,"column":10}},{"name":"Error","generated":{"line":19,"column":14},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":18,"column":14}},{"generated":{"line":19,"column":19},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":18,"column":10}},{"generated":{"line":19,"column":20},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":18,"column":20}},{"generated":{"line":19,"column":57},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":18,"column":10}},{"generated":{"line":19,"column":58},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":18,"column":4}},{"generated":{"line":20,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":19,"column":3}},{"generated":{"line":22,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":21,"column":2}},{"generated":{"line":23,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":22,"column":2}},{"name":"expression","generated":{"line":23,"column":8},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":22,"column":8}},{"name":"input","generated":{"line":23,"column":21},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":22,"column":21}},{"name":"substr","generated":{"line":23,"column":27},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":22,"column":27}},{"generated":{"line":23,"column":33},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":22,"column":21}},{"name":"inKeywordIndex","generated":{"line":23,"column":34},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":22,"column":34}},{"generated":{"line":23,"column":51},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":22,"column":51}},{"generated":{"line":23,"column":52},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":22,"column":21}},{"generated":{"line":23,"column":53},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":22,"column":2}},{"generated":{"line":25,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":24,"column":2}},{"generated":{"line":26,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":2}},{"name":"keys","generated":{"line":26,"column":8},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":8}},{"name":"input","generated":{"line":26,"column":15},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":15}},{"name":"substr","generated":{"line":26,"column":21},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":21}},{"generated":{"line":26,"column":27},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":15}},{"generated":{"line":26,"column":28},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":28}},{"generated":{"line":26,"column":29},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":15}},{"name":"inKeywordIndex","generated":{"line":26,"column":31},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":31}},{"generated":{"line":26,"column":45},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":15}},{"name":"split","generated":{"line":26,"column":47},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":47}},{"generated":{"line":26,"column":52},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":15}},{"generated":{"line":26,"column":53},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":53}},{"generated":{"line":26,"column":56},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":15}},{"generated":{"line":26,"column":57},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":25,"column":2}},{"generated":{"line":28,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":27,"column":2}},{"generated":{"line":28,"column":7},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":27,"column":7}},{"name":"i","generated":{"line":28,"column":11},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":27,"column":11}},{"generated":{"line":28,"column":15},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":27,"column":15}},{"generated":{"line":28,"column":16},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":27,"column":2}},{"name":"i","generated":{"line":28,"column":18},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":27,"column":18}},{"name":"keys","generated":{"line":28,"column":22},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":27,"column":22}},{"name":"length","generated":{"line":28,"column":27},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":27,"column":27}},{"generated":{"line":28,"column":33},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":27,"column":2}},{"name":"i","generated":{"line":28,"column":35},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":27,"column":35}},{"generated":{"line":28,"column":38},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":27,"column":2}},{"generated":{"line":28,"column":40},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":27,"column":40}},{"name":"keys","generated":{"line":29,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":28,"column":4}},{"name":"i","generated":{"line":29,"column":9},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":28,"column":9}},{"generated":{"line":29,"column":10},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":28,"column":4}},{"name":"keys","generated":{"line":29,"column":14},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":28,"column":14}},{"name":"i","generated":{"line":29,"column":19},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":28,"column":19}},{"generated":{"line":29,"column":20},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":28,"column":14}},{"name":"trim","generated":{"line":29,"column":22},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":28,"column":22}},{"generated":{"line":29,"column":26},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":28,"column":14}},{"generated":{"line":29,"column":28},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":28,"column":4}},{"generated":{"line":30,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":29,"column":3}},{"generated":{"line":32,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":31,"column":2}},{"generated":{"line":32,"column":9},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":31,"column":9}},{"name":"keys","generated":{"line":32,"column":11},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":31,"column":11}},{"generated":{"line":32,"column":21},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":31,"column":9}},{"name":"expression","generated":{"line":32,"column":23},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":31,"column":17}},{"generated":{"line":32,"column":45},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":31,"column":9}},{"generated":{"line":32,"column":47},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":31,"column":2}},{"generated":{"line":33,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":32,"column":1}},{"generated":{"line":35,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":34,"column":0}},{"name":"module","generated":{"line":40,"column":0},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":39,"column":0}},{"name":"exports","generated":{"line":40,"column":7},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":39,"column":7}},{"generated":{"line":40,"column":14},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":39,"column":0}},{"name":"parseLoopStatement","generated":{"line":40,"column":17},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":39,"column":17}},{"generated":{"line":40,"column":35},"source":"node_modules/posthtml-expressions/lib/loops.js","original":{"line":39,"column":0}}],"sources":{"node_modules/posthtml-expressions/lib/loops.js":"'use strict'\n\n/**\n * @description Given a \"loop\" parameter from an \"each\" tag, parses out the param names and expression to be looped.\n *\n * @method parseLoopStatement\n *\n * @param {String}  input Input\n *\n * @return {Object} {}    Keys && Expression\n */\nfunction parseLoopStatement (input) {\n  // try to find ` in ` keyword\n  const inKeywordIndex = input.search(/\\sin\\s/)\n\n  // if we reach the end of the string without getting \"in\", it's an error\n  if (inKeywordIndex === -1) {\n    throw new Error(\"Loop statement lacking 'in' keyword\")\n  }\n\n  // expression is always after `in` keyword\n  const expression = input.substr(inKeywordIndex + 4)\n\n  // keys is always before `in` keyword\n  const keys = input.substr(0, inKeywordIndex).split(',')\n\n  for (let i = 0; i < keys.length; i++) {\n    keys[i] = keys[i].trim()\n  }\n\n  return { keys, expression }\n}\n\n/**\n * @module loops\n *\n * @type {Function}\n */\nmodule.exports = parseLoopStatement\n"},"lineCount":null}},"hash":"371a840e8cb16013d355236b70a296ae","cacheData":{"env":{}}}